# ==========================================================================
# Copyright (C) 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
# ==========================================================================

project(hl_examples VERSION 1.0 LANGUAGES CXX)

# Operation chains
add_executable(decompression_merged_with_analytics_example operation-chains/decompression_merged_with_analytics_example.cpp)
add_executable(decompression_scan_select_example operation-chains/decompression_scan_select_example.cpp)
add_executable(set_membership_operation_chain_example operation-chains/set_membership_operation_chain_example.cpp)

target_link_libraries(decompression_merged_with_analytics_example PRIVATE qplhl)
target_link_libraries(decompression_scan_select_example PRIVATE qplhl)
target_link_libraries(set_membership_operation_chain_example PRIVATE qplhl)

set_target_properties(decompression_merged_with_analytics_example PROPERTIES CXX_STANDARD 17)
set_target_properties(decompression_scan_select_example PROPERTIES CXX_STANDARD 17)
set_target_properties(set_membership_operation_chain_example PROPERTIES CXX_STANDARD 17)

if (WIN32)
    target_compile_options(decompression_merged_with_analytics_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(decompression_scan_select_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(set_membership_operation_chain_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
else ()
    target_compile_options(decompression_merged_with_analytics_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(decompression_scan_select_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(set_membership_operation_chain_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
endif ()


# Simple operations
add_executable(compression_example simple-operations/compression_example.cpp)
add_executable(compression_stream_example simple-operations/compression_stream_example.cpp)
add_executable(crc_example simple-operations/crc_example.cpp)
add_executable(deflate_block_example simple-operations/deflate_block_example.cpp)
add_executable(expand_example simple-operations/expand_example.cpp)
add_executable(extract_example simple-operations/extract_example.cpp)
add_executable(find_unique_example simple-operations/find_unique_example.cpp)
add_executable(scan_example simple-operations/scan_example.cpp)
add_executable(scan_with_numa_device_id_example simple-operations/scan_with_numa_device_id_example.cpp)
add_executable(scan_range_example simple-operations/scan_range_example.cpp)
add_executable(select_example simple-operations/select_example.cpp)
add_executable(rle_burst_example simple-operations/rle_burst_example.cpp)
add_executable(set_membership_example simple-operations/set_membership_example.cpp)
add_executable(zero_compression_example simple-operations/zero_compression_example.cpp)

target_link_libraries(compression_example PRIVATE qplhl)
target_link_libraries(compression_stream_example PRIVATE qplhl)
target_link_libraries(crc_example PRIVATE qplhl)
target_link_libraries(deflate_block_example PRIVATE qplhl)
target_link_libraries(expand_example PRIVATE qplhl)
target_link_libraries(extract_example PRIVATE qplhl)
target_link_libraries(find_unique_example PRIVATE qplhl)
target_link_libraries(scan_example PRIVATE qplhl)
target_link_libraries(scan_with_numa_device_id_example PRIVATE qplhl PRIVATE qpl)
target_link_libraries(scan_range_example PRIVATE qplhl)
target_link_libraries(select_example PRIVATE qplhl)
target_link_libraries(rle_burst_example PRIVATE qplhl)
target_link_libraries(set_membership_example PRIVATE qplhl)
target_link_libraries(zero_compression_example PRIVATE qplhl)

set_target_properties(compression_example PROPERTIES CXX_STANDARD 17)
set_target_properties(compression_stream_example PROPERTIES CXX_STANDARD 17)
set_target_properties(crc_example PROPERTIES CXX_STANDARD 17)
set_target_properties(deflate_block_example PROPERTIES CXX_STANDARD 17)
set_target_properties(expand_example PROPERTIES CXX_STANDARD 17)
set_target_properties(extract_example PROPERTIES CXX_STANDARD 17)
set_target_properties(find_unique_example PROPERTIES CXX_STANDARD 17)
set_target_properties(scan_example PROPERTIES CXX_STANDARD 17)
set_target_properties(scan_with_numa_device_id_example PROPERTIES CXX_STANDARD 17)
set_target_properties(scan_range_example PROPERTIES CXX_STANDARD 17)
set_target_properties(select_example PROPERTIES CXX_STANDARD 17)
set_target_properties(rle_burst_example PROPERTIES CXX_STANDARD 17)
set_target_properties(set_membership_example PROPERTIES CXX_STANDARD 17)
set_target_properties(zero_compression_example PROPERTIES CXX_STANDARD 17)

if (WIN32)
    target_compile_options(compression_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(compression_stream_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(crc_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(deflate_block_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(expand_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(extract_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(find_unique_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(scan_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(scan_with_numa_device_id_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(scan_range_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(select_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(rle_burst_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(set_membership_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
    target_compile_options(zero_compression_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
else ()
    target_compile_options(compression_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(compression_stream_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(crc_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(deflate_block_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(expand_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(extract_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(find_unique_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(scan_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(scan_with_numa_device_id_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(scan_range_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(select_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(rle_burst_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(set_membership_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
    target_compile_options(zero_compression_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
endif ()

# Operation utils
add_executable(scan_with_custom_allocator_example utils/scan_with_custom_allocator_example.cpp)

target_link_libraries(scan_with_custom_allocator_example PRIVATE qplhl)

set_target_properties(scan_with_custom_allocator_example PROPERTIES CXX_STANDARD 17)

if (WIN32)
    target_compile_options(scan_with_custom_allocator_example PRIVATE "$<$<CONFIG:Release>:-O2>" /WX -D_ENABLE_EXTENDED_ALIGNED_STORAGE)
else ()
    target_compile_options(scan_with_custom_allocator_example PRIVATE "$<$<CONFIG:Release>:-O3>;$<$<COMPILE_LANG_AND_ID:CXX,GNU>:-fno-rtti>" -Werror)
endif ()
